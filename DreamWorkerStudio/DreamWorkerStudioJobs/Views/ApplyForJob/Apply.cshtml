@model DreamWorkerStudioJobs.Models.ApplyForJob

@{
	ViewBag.Title = "申请职位";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="jumbotron">
	<h1>申请职位</h1>
	<p class="lead">报名参加我们的考试</p>
</div>
@if(ViewBag.HasState == true)
{
	<div class="alert alert-@ViewBag.Kind" role="alert">@ViewBag.Message</div>
}

@{
	List<SelectListItem> projectItem = new List<SelectListItem>();
	foreach(var item in MvcApplication.ProjectList)
	{
		projectItem.Add(new SelectListItem { Text = item.Name,Value = item.ID });
	}
	List<SelectListItem> jobItem = new List<SelectListItem>();
	foreach(var item in MvcApplication.JobList)
	{
		jobItem.Add(new SelectListItem { Text = item.Name,Value = item.ID });
	}
}

@using(Html.BeginForm())
{
	@Html.AntiForgeryToken()
	<h4>你的信息</h4>
	<hr />
	@Html.ValidationSummary(true);
	<form>
		<div class="form-group">
			@Html.LabelFor(model => model.Project,new { @class = "control-label" })
			@Html.DropDownListFor(model => model.Project,projectItem,new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Project)
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Job,new { @class = "control-label" })
			@Html.DropDownListFor(model => model.Job,jobItem,new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Job)
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.Sex,new { @class = "control-label" })
			@Html.DropDownListFor(model => model.Sex,new SelectListItem[] { new SelectListItem { Text = "男",Value = "Male" },new SelectListItem { Text = "女",Value = "Female" } },new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.Sex)
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["Xing"])">
				@Html.LabelFor(model => model.Xing,new { @class = "control-label" })
				@Html.TextBoxFor(model => model.Xing,new { @class = "form-control",@type = "text",@placeholder = "姓" })
				@Html.ValidationMessageFor(model => model.Xing)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["Ming"])">
				@Html.LabelFor(model => model.Ming,new { @class = "control-label" })
				@Html.TextBoxFor(model => model.Ming,new { @class = "form-control",@type = "text",@placeholder = "名" })
				@Html.ValidationMessageFor(model => model.Ming)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["FirstName"])">
				@Html.LabelFor(model => model.FirstName,new { @class = "control-label" })
				@Html.TextBoxFor(model => model.FirstName,new { @class = "form-control",@type = "text",@placeholder = "英文名" })
				@Html.ValidationMessageFor(model => model.FirstName)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["FamilyName"])">
				@Html.LabelFor(model => model.FamilyName,new { @class = "control-label" })
				@Html.TextBoxFor(model => model.FamilyName,new { @class = "form-control",@type = "text",@placeholder = "英文姓" })
				@Html.ValidationMessageFor(model => model.FamilyName)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["Email"])">
				@Html.LabelFor(model => model.Email,new { @class = "control-label" })
				@Html.TextBoxFor(model => model.Email,new { @class = "form-control",@type = "text",@placeholder = "Email" })
				@Html.ValidationMessageFor(model => model.Email)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["PhoneNumber"])">
				@Html.LabelFor(model => model.PhoneNumber,new { @class = "control-label" })

				@Html.TextBoxFor(model => model.PhoneNumber,new { @class = "form-control",@type = "text",@placeholder = "电话号码" })
				@Html.ValidationMessageFor(model => model.PhoneNumber)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["Grade"])">
				@Html.LabelFor(model => model.Grade,new { @class = "control-label" })
				@Html.TextBoxFor(model => model.Grade,new { @class = "form-control",@type = "text",@placeholder = "年级" })
				@Html.ValidationMessageFor(model => model.Grade)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["Class"])">
				@Html.LabelFor(model => model.Class,new { @class = "control-label" })

				@Html.TextBoxFor(model => model.Class,new { @class = "form-control",@type = "text",@placeholder = "班级" })
				@Html.ValidationMessageFor(model => model.Class)
			</div>
		</div>

		<div class="form-group">
			<div class="@(ViewBag.Val?["Mark"])">
				@Html.LabelFor(model => model.Mark,new { @class = "control-label" })
				@Html.TextBoxFor(model => model.Mark,new { @class = "form-control",@type = "text",@placeholder = "中考分数" })
				@Html.ValidationMessageFor(model => model.Mark)
			</div>
		</div>


		<div class="form-group">
			<div class="@(ViewBag.Val?["Advantage"])">
				@Html.LabelFor(model => model.Advantage,new { @class = "control-label" })
				@Html.TextAreaFor(model => model.Advantage,new { @class = "form-control",@type = "text",@placeholder = "优势和能力" })
				@Html.ValidationMessageFor(model => model.Advantage)
			</div>
		</div>

		<div class="form-group">
			<input type="submit" value="提交" class="btn btn-default" />
		</div>
	</form>
}
